package helper

import "encoding/xml"

// generated by zek: https://github.com/miku/zek/
type PomXml struct {
	XMLName        xml.Name `xml:"project"`
	Text           string   `xml:",chardata"`
	Xmlns          string   `xml:"xmlns,attr"`
	Xsi            string   `xml:"xsi,attr"`
	SchemaLocation string   `xml:"schemaLocation,attr"`
	ModelVersion   struct {
		Text string `xml:",chardata"`
	} `xml:"modelVersion"`
	Parent struct {
		Text    string `xml:",chardata"`
		GroupId struct {
			Text string `xml:",chardata"`
		} `xml:"groupId"`
		ArtifactId struct {
			Text string `xml:",chardata"`
		} `xml:"artifactId"`
		Version struct {
			Text string `xml:",chardata"`
		} `xml:"version"`
		RelativePath struct {
			Text string `xml:",chardata"`
		} `xml:"relativePath"`
	} `xml:"parent"`
	GroupId struct {
		Text string `xml:",chardata"`
	} `xml:"groupId"`
	ArtifactId struct {
		Text string `xml:",chardata"`
	} `xml:"artifactId"`
	Version struct {
		Text string `xml:",chardata"`
	} `xml:"version"`
	Name struct {
		Text string `xml:",chardata"`
	} `xml:"name"`
	Description struct {
		Text string `xml:",chardata"`
	} `xml:"description"`
	Properties struct {
		Text        string `xml:",chardata"`
		JavaVersion struct {
			Text string `xml:",chardata"`
		} `xml:"java.version"`
	} `xml:"properties"`
	Dependencies struct {
		Text       string `xml:"chardata,omitempty"`
		Dependency []struct {
			Text    string `xml:"chardata,omitempty"`
			GroupId struct {
				Text string `xml:"chardata,omitempty"`
			} `xml:"groupId,omitempty"`
			ArtifactId struct {
				Text string `xml:"chardata,omitempty"`
			} `xml:"artifactId,omitempty"`
			Version struct {
				Text string `xml:"chardata,omitempty"`
			} `xml:"version,omitempty"`
			Scope struct {
				Text string `xml:"chardata,omitempty"`
			} `xml:"scope,omitempty"`
			Optional struct {
				Text string `xml:"chardata,omitempty"`
			} `xml:"optional,omitempty"`
		} `xml:"dependency"`
	} `xml:"dependencies"`
	Build struct {
		Text    string `xml:",chardata"`
		Plugins struct {
			Text   string `xml:",chardata"`
			Plugin struct {
				Text    string `xml:",chardata"`
				GroupId struct {
					Text string `xml:",chardata"`
				} `xml:"groupId"`
				ArtifactId struct {
					Text string `xml:",chardata"`
				} `xml:"artifactId"`
				Configuration struct {
					Text     string `xml:",chardata"`
					Excludes struct {
						Text    string `xml:",chardata"`
						Exclude struct {
							Text    string `xml:",chardata"`
							GroupId struct {
								Text string `xml:",chardata"`
							} `xml:"groupId"`
							ArtifactId struct {
								Text string `xml:",chardata"`
							} `xml:"artifactId"`
						} `xml:"exclude"`
					} `xml:"excludes"`
				} `xml:"configuration"`
			} `xml:"plugin"`
		} `xml:"plugins"`
	} `xml:"build"`
}
